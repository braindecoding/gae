digraph fullGraph {
	nodesep=1;
	rankdir=TB;
	ranksep="1.5 equally";
	Node_0xc00014b260:Node_0xc00014b260:anchor->Node_0xc00014a000:Node_0xc00014a000:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b260:Node_0xc00014b260:anchor->Node_0xc00014aee0:Node_0xc00014aee0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00014b340:Node_0xc00014b340:anchor->Node_0xc00014b260:Node_0xc00014b260:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b420:Node_0xc00014b420:anchor->Node_0xc00014b340:Node_0xc00014b340:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b420:Node_0xc00014b420:anchor->Node_0xc00014afc0:Node_0xc00014afc0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00014b5e0:Node_0xc00014b5e0:anchor->Node_0xc00014b420:Node_0xc00014b420:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b6c0:Node_0xc00014b6c0:anchor->Node_0xc00014b5e0:Node_0xc00014b5e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b6c0:Node_0xc00014b6c0:anchor->Node_0xc00014b0a0:Node_0xc00014b0a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00014b7a0:Node_0xc00014b7a0:anchor->Node_0xc00014b6c0:Node_0xc00014b6c0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b880:Node_0xc00014b880:anchor->Node_0xc00014b7a0:Node_0xc00014b7a0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014b880:Node_0xc00014b880:anchor->Node_0xc00014b180:Node_0xc00014b180:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00014b960:Node_0xc00014b960:anchor->Node_0xc00014b880:Node_0xc00014b880:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014ba40:Node_0xc00014ba40:anchor->Node_0xc00014b960:Node_0xc00014b960:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014bb20:Node_0xc00014bb20:anchor->Node_0xc00014a0e0:Node_0xc00014a0e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014bb20:Node_0xc00014bb20:anchor->Node_0xc00014b960:Node_0xc00014b960:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00014bc00:Node_0xc00014bc00:anchor->Node_0xc00014bb20:Node_0xc00014bb20:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014bce0:Node_0xc00014bce0:anchor->Node_0xc00014bc00:Node_0xc00014bc00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014bdc0:Node_0xc00014bdc0:anchor->Node_0xc00014bc00:Node_0xc00014bc00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00014bea0:Node_0xc00014bea0:anchor->Node_0xc00014bc00:Node_0xc00014bc00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc01a6ee000:Node_0xc01a6ee000:anchor->Node_0xc00014bdc0:Node_0xc00014bdc0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc01a6ee000:Node_0xc01a6ee000:anchor->Node_0xc00014bea0:Node_0xc00014bea0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc01a6ee0e0:Node_0xc01a6ee0e0:anchor->Node_0xc00014bce0:Node_0xc00014bce0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc01a6ee0e0:Node_0xc01a6ee0e0:anchor->Node_0xc01a6ee000:Node_0xc01a6ee000:anchor[ labelfloat=false, taillabel=" 1 " ];
	outsideRoot->insideInputs[ constraint=false, style=invis, weight=999 ];
	outsideExprG->insideExprG[ constraint=false, style=invis, weight=999 ];
	outsideRoot->outsideExprG[ constraint=false, style=invis, weight=999 ];
	insideInputs->insideExprG[ constraint=false, style=invis, weight=999 ];
	subgraph cluster_expressionGraph {
	label=expressionGraph;
	Node_0xc00014b260 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6</TD><TD>A × B(%0, %2) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 128)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b340 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>7</TD><TD>sigmoid(%6) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 128)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b420 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>8</TD><TD>A × B(%7, %3) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 64)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b5e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>9</TD><TD>sigmoid(%8) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 64)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b6c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>a</TD><TD>A × B(%9, %4) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 128)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b7a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>b</TD><TD>sigmoid(%a) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 128)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b880 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>c</TD><TD>A × B(%b, %5) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b960 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>d</TD><TD>sigmoid(%c) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014ba40 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;"  BGCOLOR="lightblue">

<TR><TD>e</TD><TD>read sigmoid(%c) :: Matrix float64 into 0xc0001da7f0 :: NIL</TD></TR>


<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014bb20 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>f</TD><TD>- false(%1, %d) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>- false :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014bc00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>10</TD><TD>square(%f) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>square :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014bce0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>11</TD><TD>Σ[0 1](%10) :: float64</TD></TR>
<TR><TD>Op</TD><TD>Σ[0 1] :: Tensor-0 a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014bdc0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>12</TD><TD>SizeOf=100(%10) :: float64</TD></TR>
<TR><TD>Op</TD><TD>SizeOf=100 :: Matrix a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014bea0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>13</TD><TD>SizeOf=784(%10) :: float64</TD></TR>
<TR><TD>Op</TD><TD>SizeOf=784 :: Matrix a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc01a6ee000 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>14</TD><TD>⊙ false(%12, %13) :: float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc01a6ee0e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>15</TD><TD>÷ false(%11, %14) :: float64</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	insideExprG [ style=invis ];

}
;
	subgraph inputConsts {
	rank=max;
	subgraph cluster_inputs {
	label=inputs;
	Node_0xc00014a000 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>0</TD><TD>x :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014a0e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>1</TD><TD>y :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(100, 784)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014aee0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>2</TD><TD>w0 :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(784, 128)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (784, 128) [128 1]<BR />⎡   0.0303     0.0774  ⋯    0.0091   -0.00718⎤<BR />⎢  -0.0577    0.00887  ⋯   -0.0451    -0.0635⎥<BR />  ⋮  <BR />⎢ -0.00155     0.0621  ⋯   -0.0627     0.0184⎥<BR />⎣   0.0694     0.0289  ⋯  -0.00991     0.0732⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014afc0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>3</TD><TD>w1 :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(128, 64)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (128, 64) [64 1]<BR />⎡ -0.00655      0.172  ⋯    0.0304      0.139⎤<BR />⎢  -0.0637     -0.112  ⋯   -0.0923    -0.0951⎥<BR />  ⋮  <BR />⎢   0.0538     -0.113  ⋯    0.0734     -0.174⎥<BR />⎣   -0.175    -0.0409  ⋯     0.103    -0.0112⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b0a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>4</TD><TD>w2 :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(64, 128)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (64, 128) [128 1]<BR />⎡ -0.00655      0.172  ⋯   -0.0923    -0.0951⎤<BR />⎢   -0.107    -0.0168  ⋯    -0.173     -0.103⎥<BR />  ⋮  <BR />⎢    0.114     -0.151  ⋯    0.0897     -0.108⎥<BR />⎣   0.0538     -0.113  ⋯     0.103    -0.0112⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00014b180 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>5</TD><TD>w3 :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(128, 784)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (128, 784) [784 1]<BR />⎡   0.0716   0.000627  ⋯   -0.0195     0.0161⎤<BR />⎢   0.0275    -0.0109  ⋯   0.00263    -0.0383⎥<BR />  ⋮  <BR />⎢   0.0296    -0.0356  ⋯    0.0625     0.0299⎥<BR />⎣  -0.0691    -0.0454  ⋯    0.0162       0.08⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	insideInputs [ style=invis ];

}
;

}
;
	subgraph outsides {
	outsideExprG [ style=invis ];
	outsideRoot [ style=invis ];

}
;

}
